#!/usr/bin/env node

/**
 * Google Indexing API Script
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –≤ Google Search Console
 * 
 * –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
 * 1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Google Cloud Console –ø—Ä–æ–µ–∫—Ç
 * 2. –í–∫–ª—é—á–∏—Ç—å Indexing API
 * 3. –°–æ–∑–¥–∞—Ç—å Service Account –∏ —Å–∫–∞—á–∞—Ç—å JSON –∫–ª—é—á
 * 4. –î–æ–±–∞–≤–∏—Ç—å Service Account –≤ Google Search Console –∫–∞–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/indexing-api.js
 */

const { google } = require('googleapis');
const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
    // –ü—É—Ç—å –∫ JSON –∫–ª—é—á—É –æ—Ç Service Account
    keyFile: path.join(__dirname, '../google-service-account.json'),
    
    // URL —Å–∞–π—Ç–∞ –≤ Google Search Console
    siteUrl: 'https://renohacks.com',
    
    // –°–ø–∏—Å–æ–∫ URL –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ)
    urlsToIndex: [
        'https://renohacks.com/calculators/budget',
        'https://renohacks.com/en/calculators/budget',
        'https://renohacks.com/posts/remont-vannoy',
        'https://renohacks.com/posts/pokraska-sten',
        'https://renohacks.com/posts/malenkaya-kuhnya',
        'https://renohacks.com/posts/remont-chernovoy-kvartiry',
        'https://renohacks.com/posts/dizain-spalni',
        'https://renohacks.com/posts/sovety-tsveta-gostinaya',
        'https://renohacks.com/posts/trends-2026',
        'https://renohacks.com/posts/vidy-oboyev',
        'https://renohacks.com/en/posts/bedroom-design',
        'https://renohacks.com/en/posts/kitchen-makeover',
        'https://renohacks.com/en/posts/diy-bathroom-makeover',
        'https://renohacks.com/en/posts/living-room-color-tips',
        'https://renohacks.com/en/posts/interior-trends-2025',
    ]
};

async function initializeIndexingAPI() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–∞
        if (!fs.existsSync(CONFIG.keyFile)) {
            console.error('‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω:', CONFIG.keyFile);
            console.log('üìù –°–æ–∑–¥–∞–π—Ç–µ Service Account –≤ Google Cloud Console –∏ —Å–∫–∞—á–∞–π—Ç–µ JSON –∫–ª—é—á');
            process.exit(1);
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google API
        const auth = new google.auth.GoogleAuth({
            keyFile: CONFIG.keyFile,
            scopes: ['https://www.googleapis.com/auth/indexing']
        });

        const indexing = google.indexing({ version: 'v3', auth });
        
        console.log('‚úÖ Google Indexing API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return indexing;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ API:', error.message);
        process.exit(1);
    }
}

async function requestIndexing(indexing, url) {
    try {
        const response = await indexing.urlNotifications.publish({
            requestBody: {
                url: url,
                type: 'URL_UPDATED'
            }
        });

        console.log(`‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: ${url}`);
        return response.data;
    } catch (error) {
        if (error.response?.status === 429) {
            console.log(`‚è≥ –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–µ–≤—ã—à–µ–Ω –¥–ª—è: ${url}`);
            return null;
        }
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${url}:`, error.message);
        return null;
    }
}

async function main() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ Google Indexing API —Å–∫—Ä–∏–ø—Ç–∞...\n');

    const indexing = await initializeIndexingAPI();
    
    console.log(`üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${CONFIG.urlsToIndex.length} URL...\n`);

    let successCount = 0;
    let errorCount = 0;

    for (const url of CONFIG.urlsToIndex) {
        const result = await requestIndexing(indexing, url);
        
        if (result) {
            successCount++;
        } else {
            errorCount++;
        }

        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (Google —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç 1-2 —Å–µ–∫—É–Ω–¥—ã)
        await new Promise(resolve => setTimeout(resolve, 1500));
    }

    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}`);
    console.log(`‚ùå –û—à–∏–±–∫–∏: ${errorCount}`);
    console.log(`üìà –í—Å–µ–≥–æ: ${CONFIG.urlsToIndex.length}`);

    if (successCount > 0) {
        console.log('\nüéâ –ó–∞–ø—Ä–æ—Å—ã –Ω–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
        console.log('‚è∞ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤ Google Search Console —á–µ—Ä–µ–∑ 1-2 –¥–Ω—è');
    }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
    main().catch(console.error);
}

module.exports = { main, CONFIG };
