{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["\uFEFFimport { defineDocumentType, makeSource } from \"contentlayer2/source-files\"\r\nimport rehypeSlug from \"rehype-slug\"\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\"\r\nimport remarkGfm from \"remark-gfm\"\r\nimport remarkMdxImages from \"remark-mdx-images\"\r\n\r\n// \u0432\u044B\u0442\u044F\u0433\u0438\u0432\u0430\u0435\u043C h2/h3 \u0434\u043B\u044F \u043E\u0433\u043B\u0430\u0432\u043B\u0435\u043D\u0438\u044F\r\nfunction extractHeadings(raw: string) {\r\n    const lines = raw.split(/\\n/)\r\n    const out: { level: number; text: string; slug: string }[] = []\r\n    for (const line of lines) {\r\n        const m2 = line.match(/^##\\s+(.+)/)\r\n        const m3 = line.match(/^###\\s+(.+)/)\r\n        const hit = m2 ? { level: 2, text: m2[1].trim() } : m3 ? { level: 3, text: m3[1].trim() } : null\r\n        if (hit) {\r\n            const slug = hit.text.toLowerCase().replace(/[^\\w\u0430-\u044F\u0451\\s-]/gi, \"\").replace(/\\s+/g, \"-\")\r\n            out.push({ level: hit.level, text: hit.text, slug })\r\n        }\r\n    }\r\n    return out\r\n}\r\n\r\nexport const Post = defineDocumentType(() => ({\r\n    name: \"Post\",\r\n    filePathPattern: `posts/**/*.mdx`,\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: { type: \"string\", required: true },\r\n        description: { type: \"string\", required: true },\r\n        date: { type: \"date\", required: true },\r\n        cover: { type: \"string\" },\r\n        tags: { type: \"list\", of: { type: \"string\" } },\r\n        readingTime: { type: \"number\" },\r\n    },\r\n    computedFields: {\r\n        slug: { type: \"string\", resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\") },\r\n        headings: { type: \"json\", resolve: (doc) => extractHeadings(doc.body.raw) },\r\n        url: { type: \"string\", resolve: (doc) => `/posts/${doc._raw.flattenedPath.replace(/^posts\\//, \"\")}` },\r\n    },\r\n}))\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"content\",\r\n    documentTypes: [Post],\r\n    disableImportAliasWarning: true,\r\n    mdx: { /* ... */ },\r\n })\r\n\r\n"],
  "mappings": ";AAAC,SAAS,oBAAoB,kBAAkB;AAOhD,SAAS,gBAAgB,KAAa;AAClC,QAAM,QAAQ,IAAI,MAAM,IAAI;AAC5B,QAAM,MAAuD,CAAC;AAC9D,aAAW,QAAQ,OAAO;AACtB,UAAM,KAAK,KAAK,MAAM,YAAY;AAClC,UAAM,KAAK,KAAK,MAAM,aAAa;AACnC,UAAM,MAAM,KAAK,EAAE,OAAO,GAAG,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,OAAO,GAAG,MAAM,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI;AAC5F,QAAI,KAAK;AACL,YAAM,OAAO,IAAI,KAAK,YAAY,EAAE,QAAQ,kBAAkB,EAAE,EAAE,QAAQ,QAAQ,GAAG;AACrF,UAAI,KAAK,EAAE,OAAO,IAAI,OAAO,MAAM,IAAI,MAAM,KAAK,CAAC;AAAA,IACvD;AAAA,EACJ;AACA,SAAO;AACX;AAEO,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,MAAM,EAAE,MAAM,QAAQ,UAAU,KAAK;AAAA,IACrC,OAAO,EAAE,MAAM,SAAS;AAAA,IACxB,MAAM,EAAE,MAAM,QAAQ,IAAI,EAAE,MAAM,SAAS,EAAE;AAAA,IAC7C,aAAa,EAAE,MAAM,SAAS;AAAA,EAClC;AAAA,EACA,gBAAgB;AAAA,IACZ,MAAM,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE,EAAE;AAAA,IACxF,UAAU,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,gBAAgB,IAAI,KAAK,GAAG,EAAE;AAAA,IAC1E,KAAK,EAAE,MAAM,UAAU,SAAS,CAAC,QAAQ,UAAU,IAAI,KAAK,cAAc,QAAQ,YAAY,EAAE,CAAC,GAAG;AAAA,EACxG;AACJ,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,2BAA2B;AAAA,EAC3B,KAAK;AAAA;AAAA,EAAY;AACpB,CAAC;",
  "names": []
}
